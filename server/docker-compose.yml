version: "3.9"

services:
  web:
    build: .
    container_name: django-web
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4
    env_file: .env
    environment:
      - VIRTUAL_HOST=server.yupidev.uz
      - LETSENCRYPT_HOST=server.yupidev.uz
      - LETSENCRYPT_EMAIL=humoyunbektursunniyazov@gmail.com
      - DJANGO_SETTINGS_MODULE=config.settings
    volumes:
      - .:/app
      - static_data:/app/staticfiles
      - media_data:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - webnet
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - webnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - static_data:/app/staticfiles:ro
      - media_data:/app/media:ro
    networks:
      - webnet
    restart: unless-stopped

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=humoyunbektursunniyazov@gmail.com
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - webnet
    restart: unless-stopped
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_data:
  media_data:

networks:
  webnet:
    driver: bridge
